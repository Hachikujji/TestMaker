<UserControl
    x:Class="TestMaker.UI.Views.UserTestsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="True">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <!--  label and button  -->
        <Grid
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <Label
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="Test" />
        </Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <Label
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="All users" />
        </Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <Label
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="Allowed users" />
        </Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="3"
            Width="100"
            Height="100"
            Background="Transparent">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:ChangePropertyAction PropertyName="Background" Value="#ddeff7" />
                    <i:ChangePropertyAction
                        PropertyName="Foreground"
                        TargetName="LogoutButton"
                        Value="Orange" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <i:ChangePropertyAction PropertyName="Background" Value="Transparent" />
                    <i:ChangePropertyAction
                        PropertyName="Foreground"
                        TargetName="LogoutButton"
                        Value="Black" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding DataContext.ReturnButtonEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <materialDesign:PackIcon
                x:Name="LogoutButton"
                Width="40"
                Height="40"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Kind="ArrowRightBold" />
        </Grid>
        <!--  SearchBox  -->
        <Grid
            Grid.Row="1"
            Grid.Column="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <TextBox
                Width="100"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Top"
                Text="{Binding TestFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <Grid
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <TextBox
                Width="100"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Top"
                Text="{Binding AllUsersFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <Grid
            Grid.Row="1"
            Grid.Column="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <TextBox
                Width="100"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Top"
                Text="{Binding AllowedUsersFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <!--  Lists  -->
        <ListView
            Grid.Row="2"
            Grid.Column="0"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            ItemsSource="{Binding TestListFiltered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding SelectedTest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Background="Transparent" />
                        <Grid Grid.Column="1">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.EditTestButtonEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <materialDesign:PackIcon
                                x:Name="EditButton"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                Kind="Pencil" />
                        </Grid>
                        <Grid Grid.Column="2">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.DeleteTestButtonEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <materialDesign:PackIcon
                                x:Name="DeleteButton"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                Kind="TrashCan" />
                        </Grid>
                        <Grid Grid.Column="3">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.ShowUsersResultsButtonEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <materialDesign:PackIcon
                                x:Name="UserAnswersButton"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                Kind="CheckboxMultipleMarkedOutline" />
                        </Grid>
                        <Grid
                            Grid.Column="4"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding DataContext.UpdateAllowedUsersButtonEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Label
                                MinWidth="140"
                                Padding="10"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Left"
                                VerticalContentAlignment="Center"
                                Content="{Binding Name}" />
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ListView
            Grid.Row="2"
            Grid.Column="1"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            ItemsSource="{Binding AllUsersFiltered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.AddAllowedUsersButtonEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Label
                            Padding="10"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Content="{Binding}" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ListView
            Grid.Row="2"
            Grid.Column="2"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            ItemsSource="{Binding AllowedUsersFiltered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.DeleteAllowedUsersButtonEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Label
                            Padding="10"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Content="{Binding}" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid Width="40" Height="40" />
    </Grid>
</UserControl>